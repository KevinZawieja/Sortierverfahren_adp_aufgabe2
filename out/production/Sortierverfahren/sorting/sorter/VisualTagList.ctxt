#BlueJ class context
comment0.target=VisualTagList
comment0.text=\r\n\ Diese\ Klasse\ stellt\ den\ Zustand\ einer\ Liste\ von\ Tag-Objekten\ grafisch\ dar.\r\n\ Auf\ der\ x-Achse\ ist\ die\ Position\ in\ der\ Liste,\ auf\ der\ y-Achse\ die\ Nummer\r\n\ des\ jeweiligen\ Tages\ aufgetragen.\ Unten\ links\ ist\ die\ Position\ 0/0.\r\n\ \r\n\ Bei\ Listen\ bis\ zu\ einer\ Gr\u00F6\u00DFe\ von\ 366\ Tagen\ sind\ in\ der\ sortierten\ Darstellung\r\n\ alle\ Tage\ gr\u00FCn\ markiert\ (jeder\ Tag\ kommt\ genau\ einmal\ vor).\ Bei\ gr\u00F6\u00DFeren\ Listen\r\n\ kommen\ Tage\ mehrfach\ vor\ und\ die\ sortierte\ Ansicht\ ist\ nicht\ mehr\ gr\u00FCn.\r\n\ \r\n\ Die\ Klasse\ bietet\ Konstruktoren,\ die\ eine\ neue\ VisualTagList\r\n\ unsortiert\ mit\ Tagen\ f\u00FCllen.\ Mit\ entsprechenden\ Konstruktorparametern\ kann\r\n\ die\ grafische\ Darstellung\ konfiguriert\ werden.\r\n\ \r\n\ @author\ Petra\ Becker-Pechau\r\n\ @author\ Lars-Peter\ Clausen\r\n\ @author\ Julian\ Fietkau\r\n\ @author\ Fredrik\ Winkler\r\n\ @author\ Axel\ Schmolitzky\r\n\ @version\ 2023\r\n
comment1.params=
comment1.target=VisualTagList()
comment1.text=\r\n\ Erzeugt\ eine\ neue\ VisualTagList\ der\ Gr\u00F6\u00DFe\ 200\ und\ f\u00FCllt\ sie\r\n\ unsortiert\ mit\ den\ Tagen\ von\ 0\ bis\ laenge-1.\r\n
comment10.params=i\ k
comment10.target=void\ swap(int,\ int)
comment10.text=\r\n\ Vertausche\ die\ beiden\ Elemente\ an\ den\ angegebenen\ Positionen\ in\ der\r\n\ Liste.\r\n\ \r\n\ @param\ i\r\n\ \ \ \ \ \ \ \ \ \ \ \ die\ Position\ des\ ersten\ Elements\r\n\ @param\ k\r\n\ \ \ \ \ \ \ \ \ \ \ \ die\ Position\ des\ zweiten\ Elements\r\n\ @throws\ IndexOutOfBoundsException\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ falls\ \!(existiert(i)\ &&\ existiert(k))\r\n
comment11.params=i\ k
comment11.target=int\ compare(int,\ int)
comment12.params=
comment12.target=void\ initialisiereAufsteigend()
comment12.text=\r\n\ "Sortiert"\ die\ Liste\ aufsteigend,\ indem\ einfach\ jeder\ Index\ mit\ dem\r\n\ passenden\ Tag\ mit\ der\ Nummer\ 0..Laenge-1\ \u00FCberschrieben\ wird.\r\n
comment13.params=
comment13.target=void\ initialisiereAbsteigend()
comment13.text=\r\n\ "Sortiert"\ die\ Liste\ absteigend,\ indem\ einfach\ jeder\ Index\ mit\ dem\r\n\ passenden\ Tag\ mit\ der\ Nummer\ Laenge-1..0\ \u00FCberschrieben\ wird.\r\n
comment14.params=
comment14.target=void\ initialisiereAlternierend()
comment14.text=\r\n\ Sortiert\ die\ Liste\ so,\ dass\ ihre\ Eintr\u00E4ge\ tendenziell\ zwischen\ hohen\ und\r\n\ niedrigen\ Werten\ hin\ und\ her\ springen.\r\n
comment15.params=
comment15.target=void\ initialisiereGleich()
comment15.text=\r\n\ Initialisiert\ die\ Liste\ so,\ dass\ alle\ Eintr\u00E4ge\ den\ gleichen\ Wert\ haben.\r\n
comment16.params=
comment16.target=void\ mischeTage()
comment16.text=\r\n\ Permutiert\ diese\ Liste\ so,\ dass\ die\ Eintr\u00E4ge\ zuf\u00E4llig\ angeordnet\r\n\ sind.\ Die\ Liste\ sieht\ nach\ jedem\ Aufruf\ anders\ aus.\r\n
comment17.params=position
comment17.target=void\ zeichne(int)
comment17.text=\r\n\ Zeichnet\ die\ gegebene\ Position\ neu\ und\ wartet\ kurz\r\n
comment2.params=laenge
comment2.target=VisualTagList(int)
comment2.text=\r\n\ Erzeugt\ eine\ neue\ VisualTagListe\ und\ f\u00FCllt\ sie\ unsortiert\ mit\ den\ Tagen\r\n\ von\ 0\ bis\ laenge-1.\ \r\n\ \r\n\ Die\ Verz\u00F6gerung\ und\ die\ Punktgr\u00F6\u00DFe\ werden\ abh\u00E4ngig\ von\ der\ gegebenen\ \r\n\ L\u00E4nge\ berechnet.\r\n\ \ \r\n\ @param\ laenge\r\n\ \ \ \ \ \ \ \ \ \ \ \ die\ L\u00E4nge\ (Kardinalit\u00E4t)\ der\ zu\ erzeugenden\ Liste.\ \r\n
comment3.params=laenge\ verzoegerung\ punktGroesse
comment3.target=VisualTagList(int,\ int,\ int)
comment3.text=\r\n\ Erzeugt\ eine\ neue\ VisualTagList\ und\ f\u00FCllt\ sie\ unsortiert\ mit\ den\ Tagen\r\n\ von\ 0\ bis\ laenge-1.\r\n\ \r\n\ @param\ laenge\r\n\ \ \ \ \ \ \ \ \ \ \ \ die\ L\u00E4nge\ (Kardinalitaet)\ der\ zu\ erzeugenden\ Liste\r\n\ @param\ verzoegerung\r\n\ \ \ \ \ \ \ \ \ \ \ \ die\ Verz\u00F6gerung\ in\ ms\r\n\ @param\ punktGroesse\r\n\ \ \ \ \ \ \ \ \ \ \ \ jeder\ Tag-Wert\ wird\ durch\ entsprechend\ viele\ Pixel\ dargestellt\r\n
comment4.params=i\ k
comment4.target=void\ swapInternal(int,\ int)
comment4.text=\r\n\ Vertauscht\ die\ Elemente\ an\ den\ Positionen\ i\ und\ k.\r\n\ \r\n\ @param\ i\ Erste\ Positionsangabe\ eines\ zu\ vertauschenden\ Elements.\r\n\ @param\ k\ Zweite\ Positionsangabe\ eines\ zu\ vertauschenden\ Elements.\r\n
comment5.params=
comment5.target=int\ size()
comment5.text=\r\n\ Liefert\ die\ Anzahl\ der\ Tage\ in\ der\ Liste.\r\n\ \r\n\ @return\ die\ Anzahl\ der\ Werte\ in\ der\ Liste\r\n
comment6.params=position
comment6.target=boolean\ exists(int)
comment6.text=\r\n\ Pr\u00FCft,\ ob\ sich\ in\ der\ Liste\ an\ der\ angegebenen\ Position\ ein\ Tag-Objekt\r\n\ befindet.\r\n\ \r\n\ @param\ position\r\n\ \ \ \ \ \ \ \ \ \ \ \ die\ zu\ pr\u00FCfende\ Position\r\n\ @return\ true,\ falls\ (position\ >\=\ 0)\ &&\ (position\ <\ size())\r\n
comment7.params=position
comment7.target=void\ pruefe(int)
comment8.params=position
comment8.target=Tag\ get(int)
comment8.text=\r\n\ Liefert\ den\ Tag\ an\ der\ angegebenen\ Position.\r\n\ \r\n\ @param\ position\r\n\ \ \ \ \ \ \ \ \ \ \ \ die\ Position\ des\ Tag-Objekts,\ das\ geliefert\ werden\ soll\r\n\ @throws\ IndexOutOfBoundsException\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ falls\ \!existiert(position)\r\n\ @return\ der\ Tag\ an\ der\ angegebenen\ Position\r\n
comment9.params=position\ t
comment9.target=void\ set(int,\ Tag)
numComments=18
